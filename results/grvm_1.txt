#>PARAMETERS--------------------------------------------
#>Statistics parameters
kNRoundsClasses =               1
kNRoundsInstances =             15           #15
#>Training parameters
kNClassesDataset =              112
kNTrainingClasses =             10           #10
kClassesSize =                  100
kNTrainingInstances =           2
#>Algorithm parameters:
kCodeSize =                     7           #5-7
kWindowSize =                   5           #5
#>Evolution parameters:
kPopSize =                      25           #25
kXOverRate =                    0.8
kMutRate =                      0.2
kElitRate =                     0.01
kMaxGenerations =               30           #30
#-------------------------------------------------------


[(5, [3, 0]), (12, [13, 43]), (13, [33, 7]), (43, [35, 38]), (44, [14, 43]), (67, [25, 7]), (73, [5, 28]), (76, [21, 3]), (87, [19, 3]), (102, [18, 29])]

Iteration #:  0
<string>:1: RuntimeWarning: overflow encountered in ubyte_scalars
C:\Users\Saulo\Documents\GitHub\IN1131-Evolutionary-Computing\src\gpcriptor.py:20: RuntimeWarning: divide by zero encountered in ubyte_scalars
  try: return num/den
                                         fitness                                             height
                ---------------------------------------------------------       -------------------------------
gen     nevals  avg             max             min             std             avg     max     min 	std
0       25      0.530144        0.707437        0.336039        0.0816882       3.8     7       2   	1.41421
1       23      0.435769        0.701463        0.333574        0.0775214       4.4     7       2    	1.41421
2       20      0.363234        0.525599        0.332675        0.0475535       4.48    7       3    	0.854166
3       19      0.354051        0.448507        0.328956        0.0376043       5.08    7       4    	0.79599
4       17      0.346509        0.474566        0.328956        0.038413        5.44    7       4    	0.897998
5       22      0.349002        0.437112        0.328844        0.0316664       6.16    7       4    	1.04614
6       16      0.358468        0.552196        0.32812         0.0594223       6.84    7       5    	0.542586
7       23      0.357877        0.523741        0.327061        0.0508457       6.84    7       3    	0.783837
8       21      0.354895        0.518725        0.326932        0.050138        6.68    7       4    	0.881816
9       23      0.344372        0.559735        0.32682         0.0495514       6.88    7       4    	0.587878
10      21      0.348168        0.492762        0.32651         0.0450735       6.92    7       5    	0.391918
11      21      0.335136        0.379163        0.325908        0.0145373       6.96    7       6    	0.195959
12      16      0.333799        0.472891        0.325788        0.0289182       7       7       7    	0
13      16      0.330653        0.407114        0.325788        0.0158538       6.8     7       4    	0.69282
14      20      0.335528        0.414364        0.325547        0.0208159       6.92    7       5    	0.391918
15      24      0.341282        0.457909        0.324327        0.0324476       6.84    7       5    	0.463033
16      22      0.33761         0.436852        0.324327        0.0308661       6.84    7       5    	0.542586
17      22      0.32865         0.380396        0.305836        0.0129049       6.88    7       5    	0.430813
18      22      0.333967        0.413177        0.323039        0.0238827       7       7       7    	0
19      22      0.342753        0.542936        0.323039        0.0473755       6.68    7       5    	0.614492
20      19      0.327891        0.409698        0.299224        0.0177478       7       7       7    	0
21      19      0.339423        0.520322        0.299224        0.0469186       6.84    7       5    	0.542586
22      22      0.327926        0.466514        0.298889        0.0325565       7       7       7    	0
23      23      0.334137        0.461376        0.298889        0.0431644       6.84    7       5    	0.463033
24      15      0.307488        0.388117        0.298863        0.0192381       7       7       7    	0
25      20      0.318617        0.50125         0.298863        0.0410095       6.92    7       6    	0.271293
26      19      0.312738        0.388143        0.298863        0.024133        6.92    7       6    	0.271293
27      22      0.31779         0.533131        0.279896        0.0498778       7       7       7    	0
28      23      0.309018        0.426356        0.273571        0.0361166       6.92    7       6    	0.271293
29      23      0.312209        0.43379         0.274035        0.0430332       6.68    7       6    	0.466476
30      23      0.301126        0.457883        0.273777        0.0427116       6.92    7       6    	0.271293

Best individual:
codeFunction(protectedDiv(P14, P22), mul(add(sub(sub(P5, P0), protectedDiv(P23, P19)), protectedDiv(sub(P19, P23), sub(P11, P10))), P21), protectedDiv(P14, P2), protectedDiv(P14, P22), mul(sub(sub(mul(mul(P7, P3), P17), sub(P11, P3)), protectedDiv(protectedDiv(P20, P5), P2)), P23), mul(mul(P23, P2), add(mul(P7, P3), mul(mul(P7, P3), P2))), sub(sub(P2, protectedDiv(P22, sub(add(mul(P7, P3), mul(P3, P2)), sub(P4, P20)))), P14))

Iteration #:  1
                                         fitness                                             height
                ---------------------------------------------------------       -------------------------------
gen     nevals  avg             max             min             std             avg     max     min std
0       25      0.554556        0.685185        0.383488        0.0806295       4       7       2   1.52315
1       20      0.460237        0.595278        0.358799        0.0626787       3.24    6       2    1.27373
2       14      0.40071         0.502517        0.335468        0.0414569       2.68    5       2    0.926067
3       20      0.385379        0.700417        0.33443         0.0691835       2.28    4       1    0.722219
4       23      0.382981        0.494376        0.306898        0.054017        2.68    5       2    0.881816
5       18      0.353474        0.464303        0.306665        0.0427461       2.96    4       2    0.958332
6       19      0.342091        0.530754        0.30651         0.0480125       3.88    6       2    0.711056
7       23      0.345643        0.493014        0.277053        0.058299        4.32    7       4    0.881816
8       24      0.337146        0.471702        0.275349        0.0558005       4.28    7       3    0.722219
9       23      0.308094        0.411835        0.275349        0.0355337       4.48    7       3    0.805978
10      23      0.337659        0.470452        0.251743        0.0682203       4.8     7       4    0.8
11      18      0.309416        0.426111        0.251743        0.056924        5.08    6       4    0.627375
12      20      0.32297         0.502335        0.251459        0.0763162       5.04    7       4    0.598665
13      18      0.302852        0.411047        0.251459        0.045765        4.96    6       3    0.598665
14      18      0.319216        0.565224        0.251381        0.0894192       5.24    7       4    0.649923
15      20      0.332512        0.700399        0.251227        0.109465        4.96    7       1    0.9992
16      21      0.302769        0.417147        0.251106        0.0653389       5.04    6       4    0.344093
17      22      0.305649        0.509353        0.25108         0.0690271       5.12    7       4    0.587878
18      19      0.285574        0.440023        0.250521        0.0468201       5.08    6       5    0.271293
19      24      0.291172        0.529982        0.250229        0.0698159       5.28    7       5    0.601332
20      24      0.295493        0.397023        0.250229        0.054525        5.36    7       5    0.557136
21      16      0.266407        0.393838        0.248846        0.0400483       5.32    7       5    0.614492
22      23      0.286449        0.407822        0.248649        0.0448081       5.4     7       4    0.848528
23      20      0.285798        0.395695        0.2484          0.0489605       5.64    7       5    0.741889
24      24      0.312099        0.42014         0.248108        0.0588168       5.56    7       5    0.637495
25      18      0.282117        0.411394        0.248108        0.0472295       5.44    7       5    0.637495
26      19      0.283238        0.464494        0.248108        0.051664        5.24    6       3    0.649923
27      20      0.30198         0.435139        0.247988        0.0547771       5.28    7       5    0.53066
28      18      0.282648        0.440525        0.247988        0.0514681       5.6     7       5    0.8
29      22      0.278149        0.447596        0.247885        0.0523624       6.8     7       5    0.565685
30      24      0.288091        0.441358        0.247559        0.0648268       6.96    7       6    0.195959

Best individual:
codeFunction(protectedDiv(P8, protectedDiv(P8, P13)), protectedDiv(P7, P5), P7, mul(add(P12, P6), mul(P5, P18)), protectedDiv(P14, P7), add(mul(sub(P10, P23), mul(P15,
add(add(P11, P17), sub(P17, P14)))), sub(sub(P16, P9), sub(P15, protectedDiv(sub(mul(P2, P6), sub(P14, P8)), protectedDiv(P18, P17))))), mul(mul(P15, P23), protectedDiv(P9, add(sub(P7, P6), sub(P17, P14)))))

Iteration #:  2
                                         fitness                                             height
                ---------------------------------------------------------       -------------------------------
gen     nevals  avg             max             min             std             avg     max     min std
0       25      0.527739        0.760419        0.362407        0.0834133       3.88    7       2   1.30599
1       23      0.430231        0.527873        0.361056        0.0523696       4.16    7       3    1.347
2       20      0.414061        0.700425        0.333263        0.0699807       4.52    7       1    1.36
3       24      0.392447        0.634345        0.332796        0.0736087       5.16    7       3    1.46096
4       24      0.364558        0.439364        0.332978        0.0383296       5.6     7       3    1.5748
5       20      0.36346         0.461446        0.328767        0.040995        4.6     7       3    1.35647
6       19      0.3557          0.490915        0.328767        0.0428781       4.88    7       3    1.65699
7       20      0.345852        0.517589        0.309707        0.0383497       5.76    7       3    1.3647
8       14      0.335348        0.531518        0.309707        0.0422962       6.68    7       6    0.466476
9       19      0.336009        0.466219        0.309395        0.0442692       5.68    7       3    1.40627
10      23      0.364595        0.525347        0.309395        0.0718672       4.04    7       3    1.28
11      23      0.355611        0.501076        0.307632        0.0550223       3.64    7       3    1.05376
12      18      0.342009        0.495244        0.307632        0.0571494       4.56    6       3    1.09836
13      24      0.348496        0.548368        0.307425        0.0655003       5.2     7       3    1.16619
14      19      0.34277         0.493448        0.281769        0.057748        5.64    7       4    0.685857
15      20      0.327608        0.4683          0.281769        0.0458879       5.88    7       3    0.95163
16      17      0.340557        0.600467        0.281769        0.0818035       5.12    7       3    1.36587
17      20      0.338256        0.469419        0.281769        0.0631191       5.44    7       3    1.29861
18      22      0.328993        0.444029        0.281769        0.0513229       5.68    7       3    0.968297
19      23      0.329452        0.539281        0.281112        0.070547        5.92    7       3    0.688186
20      14      0.312269        0.461515        0.281112        0.0486285       6.2     7       4    0.632456
21      21      0.315534        0.508798        0.281087        0.0556435       6.16    7       3    0.783837
22      20      0.3224          0.445487        0.281087        0.0577944       6.16    7       4    0.611882
23      21      0.323929        0.499262        0.278801        0.0654624       5.76    7       3    1.06883
24      18      0.314386        0.46739         0.278801        0.0557425       6.32    7       5    0.545527
25      16      0.313463        0.506604        0.278801        0.056642        6.2     7       3    1.29615
26      22      0.30882         0.414451        0.277345        0.0426163       6.48    7       3    1.20399
27      22      0.311951        0.414087        0.277345        0.0492001       6.96    7       6    0.195959
28      22      0.338322        0.460502        0.278241        0.0549859       6.6     7       4    0.979796
29      24      0.340775        0.700434        0.278206        0.0960758       6.36    7       1    1.54609
30      20      0.325294        0.516089        0.278206        0.0627855       6.6     7       3    1.13137

Best individual:
codeFunction(mul(protectedDiv(P14, P8), P11), protectedDiv(P13, P23), protectedDiv(P14, P15), protectedDiv(add(P18, P14), mul(P11, P2)), protectedDiv(P19, P18), add(P15, P9), add(P24, sub(protectedDiv(P13, P18), protectedDiv(mul(P15, protectedDiv(P8, P7)), sub(protectedDiv(protectedDiv(P14, P8), P23), sub(P19, P1))))))

Iteration #:  3
                                     fitness                                         height
                -------------------------------------------------       -------------------------------
gen     nevals  avg             max     min             std             avg     max     min     std
0       25      0.513996        0.68078 0.334205        0.0798515       3.28    7       2       1.24964
1       18      0.411007        0.524175        0.334075        0.0661847       3.2     6       2    0.938083
2       14      0.348853        0.605103        0.299439        0.0538346       3.12    4       3    0.324962
3       15      0.360698        0.580069        0.299413        0.0680788       3.48    5       3    0.574108
4       22      0.374382        0.590631        0.274507        0.0998011       3.52    4       3    0.4996
5       16      0.306236        0.445973        0.274507        0.0339381       3.68    5       3    0.676461
6       24      0.322841        0.500929        0.274507        0.054683        3.68    5       3    0.733212
7       20      0.30941         0.44396         0.276184        0.0460716       3.84    6       3    0.88
8       17      0.306888        0.469289        0.274473        0.0527418       4.56    6       4    0.637495
9       15      0.311867        0.513948        0.27334         0.0613837       4.56    6       4    0.571314
10      22      0.303631        0.563286        0.273099        0.0566135       4.84    6       3    0.783837
11      18      0.296838        0.413264        0.272996        0.0369341       4.96    7       4    0.72
12      25      0.291323        0.389546        0.250478        0.0274307       5.12    7       3    0.95163
13      21      0.316725        0.439546        0.272962        0.0502441       5.56    7       5    0.571314
14      22      0.308674        0.446311        0.272842        0.0499207       5.24    7       4    0.649923
15      21      0.289443        0.359784        0.272628        0.0283593       5.64    7       4    0.741889
16      21      0.287571        0.335762        0.272628        0.0178718       6.04    7       5    0.662118
17      24      0.292552        0.416184        0.272147        0.035425        6.6     7       5    0.565685
18      19      0.301205        0.491375        0.272147        0.0500015       6.6     7       4    0.938083
19      24      0.296849        0.389754        0.272147        0.0296651       6.36    7       3    1.29244
20      21      0.290114        0.38771         0.272147        0.0239014       6.6     7       4    0.848528
21      24      0.30799         0.444202        0.27195         0.0485003       6.8     7       4    0.69282
22      21      0.310999        0.442702        0.271899        0.0505597       6.4     7       4    1.0198
23      20      0.288816        0.357736        0.244878        0.0267919       6.4     7       4    0.979796
24      19      0.282916        0.414979        0.244715        0.0331246       6.72    7       5    0.53066
25      21      0.274512        0.447535        0.244715        0.0485033       6.68    7       6    0.466476
26      22      0.259552        0.336177        0.243596        0.0258056       6.84    7       6    0.366606
27      21      0.276004        0.492988        0.243596        0.0525318       6.92    7       6    0.271293
28      17      0.263845        0.555876        0.24345         0.0637843       6.96    7       6    0.195959
29      19      0.251653        0.350814        0.241923        0.0260082       6.92    7       6    0.271293
30      16      0.271313        0.554635        0.241923        0.0734499       6.8     7       2    0.979796

Best individual:
codeFunction(protectedDiv(P17, P16), mul(add(mul(add(P21, P14), mul(mul(protectedDiv(P5, P23), protectedDiv(P22, P15)), mul(add(P21, P14), mul(P14, P7)))), P17), mul(add(P21, P14), mul(P10, P7))), protectedDiv(P14, P13), mul(P23, mul(P23, P6)), P6, sub(P0, P23), mul(add(P21, P14), mul(mul(add(P21, P14), mul(P10, P6)), mul(add(P21, P14), mul(P14, add(P21, P14))))))

Iteration #:  4
                                     fitness                                         height
                -------------------------------------------------       -------------------------------
gen     nevals  avg     max             min             std             avg     max     min     std
0       25      0.51458 0.626424        0.387259        0.0580872       4.12    7       2       1.42324
1       18      0.450171        0.608218        0.386878        0.0652982       5.48    7       3    1.67619
2       18      0.393658        0.473359        0.361549        0.0220193       6.92    7       5    0.391918
3       21      0.388367        0.52112         0.361549        0.0336312       7       7       7    0
4       22      0.367635        0.411731        0.336489        0.0146992       7       7       7    0
5       22      0.357499        0.411922        0.336489        0.0168938       7       7       7    0
6       20      0.354458        0.438186        0.336489        0.0252039       7       7       7    0
7       16      0.356272        0.57651         0.336489        0.0523874       7       7       7    0
8       16      0.347667        0.412917        0.336489        0.0203732       7       7       7    0
9       22      0.355376        0.466115        0.336472        0.0340498       7       7       7    0
10      21      0.354657        0.435996        0.336394        0.0261299       7       7       7    0
11      24      0.351486        0.411749        0.336221        0.0224388       7       7       7    0
12      22      0.349066        0.443482        0.336186        0.0275117       7       7       7    0
13      22      0.345455        0.492242        0.336065        0.0318251       7       7       7    0
14      20      0.343284        0.437372        0.335433        0.0243475       7       7       7    0
15      23      0.346057        0.411645        0.334914        0.0216589       7       7       7    0
16      17      0.34084         0.416375        0.334646        0.01721         7       7       7    0
17      22      0.343696        0.472778        0.334646        0.0288877       7       7       7    0
18      20      0.333706        0.335546        0.308877        0.00507337      7       7       7    0
19      20      0.328618        0.336238        0.308877        0.0110886       7       7       7    0
20      20      0.318082        0.335321        0.307572        0.0122629       7       7       7    0
21      22      0.319864        0.410909        0.306881        0.0242545       7       7       7    0
22      18      0.316809        0.410329        0.306354        0.0228071       7       7       7    0
23      24      0.318418        0.384629        0.306035        0.0208486       7       7       7    0
24      23      0.322977        0.47829         0.305974        0.035891        7       7       7    0
25      15      0.313579        0.386472        0.305957        0.0204583       7       7       7    0
26      24      0.32618         0.41634         0.305957        0.0359429       7       7       7    0
27      17      0.311613        0.363247        0.305767        0.0153475       7       7       7    0
28      22      0.331556        0.544402        0.30575         0.0542216       7       7       7    0
29      19      0.320645        0.438489        0.305664        0.0289423       7       7       7    0
30      20      0.321284        0.487588        0.305655        0.0381151       7       7       7    0

Best individual:
codeFunction(mul(sub(protectedDiv(add(sub(add(P21, P1), sub(P23, P16)), add(sub(P12, P8), mul(P9, P17))), mul(add(protectedDiv(P7, P9), protectedDiv(P18, P11)), protectedDiv(mul(P9, P19), protectedDiv(P7, P2)))), mul(protectedDiv(mul(protectedDiv(P11, P23), protectedDiv(P19, P21)), mul(protectedDiv(P11, P23), mul(P20, P13))), protectedDiv(mul(sub(P7, P9), add(P18, P16)), add(add(P16, P13), sub(P8, P8))))), add(add(protectedDiv(mul(sub(P12, P7), sub(P3, P16)), mul(sub(P20, P1), sub(P17, P3))), sub(sub(sub(P3, P12), add(P5, P9)), mul(protectedDiv(P21, P24), protectedDiv(P12, P23)))), sub(sub(add(add(P12, P19), add(P20, P13)), add(sub(P2, P21), add(P19, P13))), sub(protectedDiv(mul(P0, P24), protectedDiv(P7, P21)), sub(protectedDiv(P21, P21), protectedDiv(P15, P19)))))), mul(mul(sub(mul(sub(sub(P0, P4), sub(P14, P11)), mul(add(P16, P6), add(P9, P1))), protectedDiv(add(add(P5, P14), protectedDiv(P12, P11)), mul(P17, protectedDiv(P22, P2)))), mul(protectedDiv(protectedDiv(sub(P6, P12), protectedDiv(P14, P23)), mul(sub(P2, P20), sub(P9, P16))), protectedDiv(protectedDiv(mul(P1, P22), protectedDiv(P7, P13)), sub(protectedDiv(P15, P18), protectedDiv(P23, P12))))), add(sub(protectedDiv(sub(sub(P4, P21), mul(P14, P17)), add(mul(P8, P4), mul(P8, P11))), sub(sub(add(P14, P0), add(P2, P24)), protectedDiv(P21, P24))), add(sub(mul(protectedDiv(P6, P6), add(P12, P18)), add(sub(P22, P16), mul(P17, P21))), mul(protectedDiv(sub(P3, P18), add(P19, P7)), protectedDiv(protectedDiv(P24, P9), sub(P6, P9)))))),
mul(mul(mul(mul(protectedDiv(add(P3, P18), add(P0, P8)), add(sub(P6, P16), sub(P12, P22))), sub(mul(add(P15, P14), sub(P0, P17)), mul(add(P22, P2), add(P22, P6)))), sub(sub(protectedDiv(mul(P6, P3), add(P2, P13)), mul(sub(P6, P15), protectedDiv(P12, P11))), mul(protectedDiv(add(P7, P0), protectedDiv(P7, P24)), P12))), add(add(protectedDiv(add(add(P17, P5), add(P4, P9)), sub(protectedDiv(P15, P7), add(P14, P15))), add(mul(protectedDiv(P13, P17), protectedDiv(P18, P15)), mul(add(P21, P4), mul(P13, P24)))), mul(sub(sub(add(P1, P17), protectedDiv(P17, P18)), protectedDiv(sub(P7, P17), protectedDiv(P18, P1))), protectedDiv(protectedDiv(P22, P5), add(P18, P21))))), add(protectedDiv(mul(protectedDiv(add(sub(P16, P22), add(P21, P4)), sub(protectedDiv(P9, P21), protectedDiv(P8, P8))), add(sub(sub(P5, P5), sub(P2, P11)), protectedDiv(protectedDiv(P22, P18), protectedDiv(P17, P13)))), mul(add(mul(mul(P1, P7), add(P23, P9)), sub(protectedDiv(P5, P13), mul(P19, P9))), add(mul(mul(P13, P15), add(P13, P13)), add(mul(P8, P22), mul(P6, P21))))), protectedDiv(protectedDiv(protectedDiv(protectedDiv(add(P17, P8), sub(P13, P11)), add(protectedDiv(P21, P1), mul(P14, P20))), mul(sub(protectedDiv(P13, P2), sub(P15, P5)), protectedDiv(sub(P23, P24), sub(P4, P12)))), add(sub(add(sub(P8, P21), protectedDiv(P2, P21)), mul(sub(P7, P0), protectedDiv(P8, P9))), sub(protectedDiv(add(P14, P2), add(P2, P2)), sub(add(P12, P8), mul(P20, P8)))))), sub(add(protectedDiv(add(sub(protectedDiv(P17, P14), add(P17, P2)), protectedDiv(add(P14, P1), sub(P2, P17))), mul(sub(protectedDiv(P5, P23), sub(P7, P13)), sub(protectedDiv(P8, P21), protectedDiv(P16, P11)))), add(mul(mul(add(P17, P3), protectedDiv(P11, P8)), protectedDiv(protectedDiv(P21, P11), mul(P14, P16))), mul(protectedDiv(sub(P22, P4), mul(P14, P6)), mul(sub(P8, P8), add(P5, P24))))), protectedDiv(protectedDiv(sub(protectedDiv(protectedDiv(P9, P1), mul(P7, P0)), sub(mul(P11, P19), mul(P23, P24))), protectedDiv(add(sub(P16, P20), mul(P3, P3)), add(sub(P15, P16), protectedDiv(P19, P0)))), sub(sub(mul(add(P6, P5), mul(P6, P23)), add(add(P11, P23), mul(P2, P16))), protectedDiv(mul(sub(P7, P14), protectedDiv(P2, P7)), protectedDiv(protectedDiv(P23, P17), sub(P10, P14)))))), add(protectedDiv(mul(protectedDiv(sub(sub(P13, P4), sub(P22, P19)), mul(protectedDiv(P6, P14), sub(P0, P20))), mul(add(mul(P12, P1), mul(P22, P20)), mul(protectedDiv(P3, P17), add(P1, P20)))), sub(add(sub(mul(P11, P8), protectedDiv(P8, P1)), mul(mul(P2, P9), sub(P1, P6))), mul(add(add(P14, P13),
add(P20, P12)), protectedDiv(sub(P13, P4), add(P23, P22))))), sub(mul(mul(mul(protectedDiv(P0, P8), sub(P17, P8)), add(protectedDiv(P0, P2), protectedDiv(P17, P14))), add(protectedDiv(sub(P15, P8), add(P11, P4)), protectedDiv(protectedDiv(P14, P11), add(P23, P6)))), sub(protectedDiv(mul(mul(P5, P13), add(P3, P24)), protectedDiv(add(P17, P17), mul(P24, P17))), add(mul(mul(P1, P24), mul(P23, P8)), protectedDiv(mul(P2, P17), add(P13, P3)))))), sub(mul(sub(add(mul(mul(P9, P13), sub(P9, P4)), mul(protectedDiv(P13, P0), add(P21, P12))), add(mul(add(P17, P24), sub(P14, P13)), protectedDiv(mul(P15, P2), protectedDiv(P18, P2)))), sub(add(sub(add(P9, P0), sub(P19, P21)), add(mul(P12, P20), sub(P22, P7))), protectedDiv(sub(protectedDiv(P18, P24), mul(P12, P4)), mul(protectedDiv(P10, P13), add(P0, P3))))), mul(protectedDiv(add(add(P13, protectedDiv(P12, P1)), protectedDiv(add(P24, P23), mul(P3, P24))), protectedDiv(protectedDiv(protectedDiv(P8, P23), protectedDiv(P10, P10)), protectedDiv(protectedDiv(P9,
P5), add(P21, P20)))), sub(add(sub(add(P4, P20), protectedDiv(P12, P11)), protectedDiv(add(P7, P5), add(P2, P19))), sub(mul(protectedDiv(P4, P23), protectedDiv(P0, P24)), mul(add(P17, P4), protectedDiv(P16, P0)))))))

Iteration #:  5
                                         fitness                                             height
                ---------------------------------------------------------       -------------------------------
gen     nevals  avg             max             min             std             avg     max     min std
0       25      0.523708        0.634553        0.378698        0.0701334       3.8     7       2   1.54919
1       16      0.431405        0.529808        0.353767        0.045584        2.96    6       2    0.958332
2       22      0.396984        0.484058        0.352604        0.035888        3.72    5       3    0.66453
3       21      0.382448        0.494628        0.321325        0.0378951       4.24    5       3    0.81388
4       21      0.371138        0.506847        0.321008        0.0447766       3.96    5       3    0.870862
5       21      0.348823        0.421224        0.31746         0.0346842       4.6     6       3    0.938083
6       20      0.343919        0.446033        0.315661        0.0385223       5.28    6       4    0.53066
7       20      0.333048        0.436792        0.290627        0.0393203       5.28    6       2    0.825591
8       19      0.327846        0.436134        0.266709        0.0445953       5.4     7       5    0.69282
9       21      0.304516        0.554557        0.266709        0.0576543       5.64    7       3    1.01509
10      21      0.30739         0.413117        0.266249        0.0434915       5.32    7       5    0.614492
11      16      0.296987        0.420982        0.266496        0.0410788       5.52    7       5    0.754718
12      18      0.296711        0.421839        0.266079        0.0466512       5.8     7       5    0.938083
13      18      0.305503        0.467424        0.261905        0.0582541       6.56    7       5    0.80399
14      21      0.304434        0.426338        0.261735        0.051471        6.76    7       5    0.649923
15      22      0.282312        0.415118        0.260914        0.0376469       6.92    7       5    0.391918
16      22      0.280522        0.494159        0.260914        0.0502935       7       7       7    0
17      22      0.284013        0.372319        0.260914        0.033606        6.96    7       6    0.195959
18      23      0.304597        0.42701         0.258529        0.0536991       6.8     7       5    0.565685
19      17      0.294114        0.396582        0.258529        0.0473796       7       7       7    0
20      24      0.268342        0.367938        0.257626        0.0249972       7       7       7    0
21      19      0.267878        0.352767        0.257551        0.0263312       7       7       7    0
22      21      0.276393        0.391658        0.25739         0.0345906       7       7       7    0
23      20      0.27733         0.380767        0.257213        0.0351237       7       7       7    0
24      16      0.270295        0.34463         0.257213        0.023706        7       7       7    0
25      21      0.277413        0.345049        0.256961        0.0305757       7       7       7    0
26      16      0.269621        0.365133        0.240636        0.0289406       7       7       7    0
27      22      0.271292        0.412285        0.240542        0.0350363       7       7       7    0
28      21      0.268083        0.398906        0.239563        0.0367816       7       7       7    0
29      18      0.253144        0.343502        0.239317        0.0231324       7       7       7    0
30      22      0.252391        0.296282        0.239053        0.0198495       7       7       7    0

Best individual:
codeFunction(mul(sub(P11, mul(P23, P21)), protectedDiv(mul(mul(P23, P21), protectedDiv(sub(sub(P11, P7), protectedDiv(P24, P17)), P24)), add(P19, P7))), mul(add(P14, P15), mul(P24, P17)), sub(mul(add(add(protectedDiv(P0, P13), protectedDiv(P2, P7)), P7), mul(P17, P17)), protectedDiv(P24, mul(mul(protectedDiv(P24, P7), P21), protectedDiv(sub(sub(P11, P7), protectedDiv(P24, P7)), protectedDiv(P13, P16))))), protectedDiv(mul(P0, P0), add(add(protectedDiv(P21, P14), add(P22, P19)), P0)), mul(P12, sub(P12, P11)), protectedDiv(add(P7, P12), protectedDiv(P22, P7)), protectedDiv(P13, P16))

Iteration #:  6
                                         fitness                                             height
                ---------------------------------------------------------       -------------------------------
gen     nevals  avg             max             min             std             avg     max     min std
0       25      0.536922        0.704618        0.337138        0.0940377       4       7       2   1.67332
1       22      0.438605        0.662654        0.337043        0.0811321       3.6     7       2    1.09545
2       21      0.427269        0.549063        0.336593        0.0724381       3.44    6       3    0.752596
3       20      0.395218        0.621544        0.336775        0.085891        3.68    6       3    0.926067
4       17      0.363746        0.594914        0.336273        0.065817        3.52    5       3    0.574108
5       22      0.374496        0.521285        0.336273        0.0552243       4.32    7       3    0.835225
6       23      0.393803        0.599676        0.335485        0.0784964       4.2     6       4    0.489898
7       20      0.368048        0.501727        0.335485        0.0551422       4.32    6       4    0.545527
8       17      0.366758        0.581578        0.33545         0.0634876       4.2     6       4    0.489898
9       20      0.37545         0.571096        0.33481         0.0670293       4.4     7       4    0.848528
10      23      0.394296        0.600642        0.334689        0.0738334       4.24    6       4    0.58515
11      21      0.386332        0.700477        0.33481         0.0851679       4.12    6       1    0.815843
12      23      0.373952        0.56074         0.33481         0.056152        4.56    7       4    0.897998
13      19      0.367584        0.525312        0.33481         0.0471421       4.44    7       4    0.897998
14      21      0.372365        0.642826        0.308254        0.0682015       4.24    5       3    0.58515
15      21      0.386273        0.658112        0.308453        0.0805869       4.64    7       4    0.685857
16      22      0.37121         0.507437        0.308911        0.0643047       5.08    7       4    1.01666
17      21      0.396527        0.70033         0.308911        0.105583        4.44    6       1    1.02294
18      23      0.387936        0.595208        0.308903        0.0910425       4.4     6       4    0.69282
19      24      0.349842        0.595981        0.308643        0.0763587       4.88    7       4    1.03228
20      20      0.371668        0.615449        0.308643        0.0919204       4.32    6       4    0.545527
21      23      0.354561        0.518847        0.308064        0.0646962       4.12    7       2    0.765245
22      22      0.361974        0.700408        0.308764        0.0865081       4.16    6       1    0.88
23      20      0.362709        0.595634        0.308721        0.0838579       4.4     7       4    0.938083
24      20      0.333856        0.440257        0.308531        0.0356477       4.32    6       4    0.614492
25      23      0.381757        0.581448        0.308531        0.0930706       4.64    7       4    0.889044
26      20      0.374325        0.582142        0.308531        0.0795162       5.24    7       4    0.906863
27      20      0.357241        0.466158        0.280103        0.0608724       5.2     7       4    0.565685
28      18      0.336102        0.552656        0.280103        0.0553751       4.88    7       4    0.711056
29      21      0.338552        0.504973        0.280103        0.0719864       4.6     7       4    0.848528
30      22      0.342365        0.54967         0.280103        0.084933        4.32    7       3    0.881816

Best individual:
codeFunction(mul(P10, mul(P10, P18)), add(P2, add(P19, add(P8, P11))), protectedDiv(P3, P21), protectedDiv(P18, P22), sub(mul(P10, mul(P10, P18)), P18), protectedDiv(P3, P22), P3)

Iteration #:  7
                                     fitness                                        height
                -------------------------------------------------       ------------------------------
gen     nevals  avg             max     min             std             avg     max     min     std
0       25      0.535077        0.661   0.420382        0.0702831       3.92    7       2       1.6473
1       22      0.462334        0.535263        0.395894        0.037091        3.28    7       2    1.61295
2       22      0.447642        0.631379        0.393274        0.051605        2.6     7       2    1.0198
3       24      0.443102        0.584935        0.367207        0.0576307       2.48    4       2    0.574108
4       17      0.421499        0.549774        0.367207        0.0563762       2.92    5       2    0.79599
5       23      0.386298        0.47835         0.342416        0.0313313       3.04    4       2    0.344093
6       25      0.417398        0.553802        0.314962        0.0664522       3.36    6       2    0.842852
7       19      0.381123        0.523012        0.314633        0.0554377       3.64    6       2    1.19599
8       19      0.379859        0.57743         0.314026        0.0703079       3.88    7       3    1.39485
9       22      0.359201        0.445009        0.313749        0.0463312       3.44    6       3    0.752596
10      20      0.351518        0.507168        0.312632        0.0559039       3.36    6       3    0.741889
11      14      0.339587        0.502656        0.312294        0.0459176       3.68    7       3    1.22376
12      19      0.354228        0.502517        0.312294        0.0529691       4.64    7       3    1.597
13      22      0.356981        0.496224        0.312294        0.052429        6       7       3    1.09545
14      24      0.338802        0.419307        0.312242        0.0357159       6.36    7       3    0.974885
15      24      0.340063        0.416982        0.312242        0.0336452       6.64    7       3    1.09105
16      19      0.347992        0.661372        0.310719        0.0773878       6.72    7       2    1.0008
17      22      0.358946        0.700356        0.310719        0.0786952       6.6     7       1    1.23288
18      19      0.347575        0.493604        0.310719        0.0487014       6.8     7       4    0.632456
19      22      0.345718        0.469879        0.309836        0.0407892       6.4     7       2    1.41421
20      21      0.360919        0.467502        0.309836        0.0467733       6.52    7       2    1.23677
21      22      0.363505        0.663753        0.310719        0.0750355       6.04    7       3    1.56154
22      20      0.341525        0.407762        0.310719        0.0282585       6.8     7       6    0.4
23      24      0.358642        0.700451        0.310719        0.0735369       6.48    7       1    1.29985
24      17      0.333136        0.394784        0.310719        0.0272199       6.48    7       6    0.4996
25      22      0.342256        0.448108        0.309603        0.0383733       6.32    7       6    0.466476
26      20      0.331154        0.41174         0.309603        0.0292538       6.6     7       3    0.848528
27      17      0.341048        0.44108         0.309603        0.0422209       6.28    7       3    0.96
28      18      0.338602        0.468482        0.307408        0.0453725       5.88    7       3    1.14263
29      24      0.346726        0.451502        0.309439        0.0450945       5.92    7       4    0.56
30      22      0.32822         0.46342         0.308591        0.0337698       5.48    7       3    0.943186

Best individual:
codeFunction(add(sub(P2, P16), protectedDiv(P13, P24)), mul(P2, P9), mul(P21, mul(sub(P9, mul(mul(P7, P19), P2)), P17)), mul(P18, sub(P9, P19)), mul(mul(P22, P5), P5),
protectedDiv(P16, P7), mul(mul(P7, P19), P2))

Iteration #:  8
                                         fitness                                             height
                ---------------------------------------------------------       -------------------------------
gen     nevals  avg             max             min             std             avg     max     min std
0       25      0.560871        0.706691        0.450312        0.0673665       4.12    6       2   1.30599
1       21      0.499038        0.58379         0.450868        0.0417289       4.68    7       2    1.46205
2       18      0.47138         0.55447         0.426311        0.0322256       5.04    7       2    1.92832
3       18      0.474067        0.608261        0.426311        0.0439278       4.44    7       2    2.02148
4       23      0.47002         0.652917        0.426042        0.0556607       4.84    7       2    1.89061
5       24      0.447036        0.580043        0.424375        0.0342766       6.52    7       4    0.699714
6       20      0.439769        0.529001        0.424436        0.0258417       6.68    7       6    0.466476
7       22      0.432369        0.477266        0.423785        0.016975        6.64    7       6    0.48
8       21      0.436456        0.527639        0.423785        0.0261324       6.44    7       6    0.496387
9       21      0.43708         0.550148        0.423359        0.0315465       6.88    7       6    0.324962
10      23      0.436719        0.522813        0.421485        0.0269847       7       7       7    0
11      22      0.423673        0.47276         0.397622        0.0131093       7       7       7    0
12      22      0.411464        0.445981        0.397622        0.0136739       7       7       7    0
13      19      0.413863        0.547014        0.396311        0.0367666       7       7       7    0
14      17      0.400158        0.445304        0.395044        0.0106313       7       7       7    0
15      24      0.406098        0.471849        0.39468         0.0216998       7       7       7    0
16      21      0.40819         0.49974         0.37204         0.0305955       7       7       7    0
17      18      0.391703        0.45013         0.368855        0.0172752       7       7       7    0
18      19      0.388618        0.473351        0.368855        0.0289318       7       7       7    0
19      19      0.389488        0.473099        0.36876         0.0328515       7       7       7    0
20      21      0.375876        0.395348        0.36817         0.0112913       7       7       7    0
21      20      0.389385        0.522075        0.367867        0.0408724       7       7       7    0
22      22      0.384035        0.468933        0.368075        0.0300464       7       7       7    0
23      18      0.38706         0.497717        0.367537        0.0327021       7       7       7    0
24      22      0.378685        0.472049        0.367459        0.0246465       7       7       7    0
25      20      0.378278        0.472535        0.367459        0.0289521       7       7       7    0
26      20      0.381194        0.473038        0.367337        0.0267784       7       7       7    0
27      20      0.381234        0.498038        0.366982        0.0341173       7       7       7    0
28      20      0.376824        0.475521        0.365335        0.0249395       7       7       7    0
29      22      0.380325        0.449644        0.3653          0.0251434       7       7       7    0
30      21      0.373535        0.442381        0.365265        0.0195112       7       7       7    0

Best individual:
codeFunction(add(add(sub(protectedDiv(add(P21, P12), add(P19, P8)), add(sub(mul(P11, P16), protectedDiv(P3, P15)), sub(add(P21, P7), mul(P9, P17)))), protectedDiv(sub(protectedDiv(P20, P19), mul(P4, P11)), sub(add(P18, P1), mul(P5, P16)))), protectedDiv(mul(mul(protectedDiv(P3, P21), add(P22, P21)), mul(sub(P11, P22), add(P3, P0))), protectedDiv(add(P4, mul(P5, P9)), add(sub(P23, P24), sub(P2, P15))))), add(sub(protectedDiv(mul(mul(P1, P5), protectedDiv(P10, P9)), sub(mul(P1, P19), add(P18, P1))), add(protectedDiv(mul(P24, P18), sub(P21, P4)), add(protectedDiv(P5, P14), sub(P14, P1)))), protectedDiv(protectedDiv(add(sub(P24, add(P18, P5)), protectedDiv(protectedDiv(P5, P14), P12)), mul(mul(P8, P10), protectedDiv(P2, P20))), sub(sub(mul(P22, P19), add(P19, P21)), sub(sub(P10, P16), mul(P3, P21))))), sub(mul(mul(mul(mul(P19, P23), protectedDiv(P11, P10)), sub(add(P21, P15), protectedDiv(P11, P11))), protectedDiv(add(mul(mul(P16, P20), P15), sub(P18, P11)), sub(mul(P5, P11), sub(P9, P19)))), mul(protectedDiv(P0, mul(mul(P7, P19), add(P16, P17))), mul(sub(mul(P3, P4), add(P22, P11)), sub(protectedDiv(P5, P19), protectedDiv(P9, P19))))), add(mul(protectedDiv(mul(sub(P20, P8), add(P20, P19)), mul(sub(P22, mul(P8, P10)), mul(P10, P1))), sub(add(mul(P3, P4), protectedDiv(P0, P20)), protectedDiv(add(P16, P14), P1))), mul(protectedDiv(sub(sub(P20, P9), add(sub(P24, P15), P22)), add(add(P14, P16), protectedDiv(P11, P24))), add(P12, add(mul(P6, P21), protectedDiv(P23, P14))))), mul(add(sub(sub(protectedDiv(P22, P23), add(P24, P24)), protectedDiv(add(P4, P17), protectedDiv(P1, P11))), add(sub(add(P15, P3), protectedDiv(P19, P1)), protectedDiv(add(mul(P20, P12), mul(P22, P8)), protectedDiv(mul(P5, P17), sub(P9, P12))))), protectedDiv(add(mul(protectedDiv(P15, P12), protectedDiv(P6, P4)), protectedDiv(P5, P19)), mul(protectedDiv(add(P16, P6), sub(P17, P3)), protectedDiv(sub(P11, P6), mul(P11, P11))))), sub(sub(mul(sub(add(P17, P4), add(P7, P16)), protectedDiv(add(P10, P14), add(P5, P2))), mul(mul(protectedDiv(P12, P0), mul(P13, P24)), sub(add(P8, P6), sub(P4, P4)))), protectedDiv(sub(protectedDiv(add(P17, P17), mul(P7, P21)), protectedDiv(protectedDiv(P20, P3), mul(P11, P19))), mul(add(sub(P24, P15), P22), P5))), add(add(add(mul(add(P8, P6), mul(P20, P23)), mul(mul(P11, P23), add(P3, P8))), protectedDiv(mul(protectedDiv(P15,
P0), sub(P1, P23)), protectedDiv(sub(P19, P22), protectedDiv(P5, P8)))), add(mul(add(add(P14, P13), protectedDiv(P13, P18)), add(mul(P12, P14), sub(P23, P21))), mul(add(add(P22, P17), sub(P6, P4)), sub(protectedDiv(P14, P4), add(P4, P10))))))

Iteration #:  9
                                         fitness                                             height
                ---------------------------------------------------------       -------------------------------
gen     nevals  avg             max             min             std             avg     max     min std
0       25      0.503496        0.651979        0.387069        0.0666344       3.72    7       2   1.42885
1       25      0.452963        0.584241        0.386766        0.0511734       3.96    6       3    1.03846
2       23      0.40593         0.555945        0.331259        0.0424042       5       7       2    1.29615
3       23      0.375213        0.476233        0.330871        0.0339085       5.24    7       4    1.06883
4       19      0.347993        0.462995        0.330629        0.0351829       5.04    7       4    1.03846
5       18      0.360225        0.512472        0.305905        0.0554914       6.08    7       6    0.271293
6       20      0.339007        0.496563        0.305241        0.0477607       6.08    7       6    0.271293
7       22      0.325074        0.435675        0.305043        0.0312961       6.08    7       6    0.271293
8       22      0.321822        0.420391        0.304534        0.0288887       6.16    7       5    0.463033
9       20      0.320877        0.412389        0.302268        0.0316705       6.56    7       5    0.571314
10      22      0.314014        0.360502        0.302681        0.0187927       6.68    7       5    0.614492
11      20      0.31117         0.39265         0.3009          0.0207195       6.28    7       5    0.601332
12      19      0.312894        0.47796         0.300298        0.0352259       6.04    7       5    0.344093
13      22      0.308064        0.385684        0.274439        0.0238351       6.08    7       6    0.271293
14      24      0.31716         0.381691        0.274439        0.0305871       5.92    6       5    0.271293
15      17      0.307773        0.471502        0.273168        0.0456826       5.92    7       5    0.391918
16      24      0.299749        0.443916        0.272773        0.0470379       6       7       5    0.282843
17      20      0.284764        0.358349        0.272053        0.0253636       6.28    7       6    0.448999
18      18      0.282899        0.384248        0.270802        0.0304852       6.28    7       6    0.448999
19      18      0.296537        0.445539        0.270802        0.0430923       6.2     7       6    0.4
20      20      0.280795        0.327879        0.270503        0.016109        6.16    7       5    0.463033
21      23      0.299519        0.396597        0.270186        0.0405177       5.76    7       5    0.649923
22      24      0.318079        0.700339        0.270477        0.0882635       4.88    6       1    0.95163
23      21      0.293396        0.442225        0.268134        0.0392072       5.12    6       4    0.430813
24      21      0.290659        0.416176        0.267827        0.03452         5.16    7       4    0.611882
25      22      0.307553        0.494307        0.267938        0.0585544       5       7       2    0.894427
26      20      0.288159        0.356095        0.268442        0.0288573       5.2     7       4    0.69282
27      18      0.289508        0.409767        0.268442        0.0361753       5.08    7       4    0.483322
28      20      0.295217        0.458868        0.267426        0.0442949       5.32    7       4    0.881816
29      20      0.288003        0.467147        0.266658        0.0425697       5.24    7       4    1.2093
30      23      0.293506        0.502066        0.266462        0.0478334       5.76    7       4    1.14123

Best individual:
codeFunction(mul(protectedDiv(P12, P0), add(sub(mul(P1, P19), P15), protectedDiv(P22, protectedDiv(P12, P20)))), protectedDiv(protectedDiv(P1, protectedDiv(P2, P22)), protectedDiv(protectedDiv(P8, P24), add(sub(protectedDiv(P23, P22), P23), P23))), mul(P13, sub(protectedDiv(protectedDiv(P16, P22), P12), add(P0, P15))), protectedDiv(P21, P7), protectedDiv(P8, P24), mul(add(P21, add(P2, add(P0, P23))), protectedDiv(P12, sub(P22, P2))), protectedDiv(sub(add(P7, P18), protectedDiv(sub(sub(protectedDiv(P6, P10), protectedDiv(P1, P17)), protectedDiv(add(P15, P6), sub(P18, P8))), P19)), mul(mul(P11, P0), sub(P22, P23))))

Iteration #:  10
                                         fitness                                             height
                ---------------------------------------------------------       -------------------------------
gen     nevals  avg             max             min             std             avg     max     min std
0       25      0.527933        0.636459        0.392303        0.0560827       3.68    6       2   1.15655
1       19      0.469461        0.57263         0.370452        0.0504428       4.32    7       2    1.31818
2       15      0.414916        0.548472        0.334983        0.0519762       4.92    7       4    1.12854
3       23      0.403718        0.700443        0.312528        0.0850138       4.72    7       1    1.21721
4       20      0.378286        0.528646        0.312355        0.0614536       4.64    7       4    0.889044
5       18      0.347657        0.460952        0.310978        0.0427234       4.24    7       4    0.649923
6       22      0.348739        0.466861        0.310892        0.0428092       4.52    7       4    0.805978
7       17      0.339787        0.445374        0.288801        0.0459189       4.72    7       4    0.96
8       22      0.345821        0.551363        0.286203        0.060362        5.16    7       4    0.833307
9       15      0.351844        0.63839         0.286203        0.0844927       5.16    7       4    0.833307
10      25      0.377222        0.497813        0.286169        0.0698348       5       7       4    1.0198
11      20      0.345632        0.472734        0.285952        0.0556706       5.24    7       4    1.24193
12      21      0.347769        0.599618        0.285857        0.0883637       5.16    7       4    1.00717
13      16      0.298795        0.414494        0.262           0.0330968       5.36    7       4    0.974885
14      19      0.33018         0.544844        0.262           0.068758        5.2     7       4    0.848528
15      21      0.320195        0.439191        0.261887        0.057853        4.96    7       4    0.598665
16      19      0.322918        0.473802        0.26187         0.0717154       5.12    7       4    0.711056
17      21      0.33023         0.663364        0.26187         0.0967457       5.24    7       5    0.51225
18      19      0.305898        0.528055        0.236437        0.0720759       5.2     7       5    0.489898
19      22      0.290863        0.521085        0.236437        0.0734439       5.08    6       5    0.271293
20      20      0.319584        0.473602        0.236437        0.0795002       5.28    7       5    0.66453
21      17      0.267182        0.473212        0.236437        0.0540691       5.36    7       5    0.741889
22      17      0.2606          0.341869        0.236359        0.0343852       5.28    7       5    0.53066
23      18      0.28601         0.499227        0.236359        0.0719588       5.52    7       5    0.805978
24      16      0.287829        0.446181        0.236099        0.0670238       5.36    7       5    0.685857
25      18      0.290795        0.415907        0.236099        0.062986        5.2     7       5    0.489898
26      23      0.31688         0.663251        0.236307        0.107279        5.32    7       5    0.545527
27      22      0.286301        0.43913         0.234733        0.068544        5.44    7       5    0.571314
28      20      0.270387        0.416904        0.234733        0.0564026       5.88    7       5    0.765245
29      19      0.284592        0.661676        0.234655        0.0933073       6.24    7       5    0.58515
30      21      0.2908          0.558218        0.234387        0.0872083       6.04    7       5    0.344093

Best individual:
codeFunction(sub(protectedDiv(P5, P9), protectedDiv(sub(P10, P12), sub(P8, P3))), add(add(add(P16, P10), protectedDiv(P9, P8)), protectedDiv(sub(protectedDiv(P9, P8), P2), sub(P10, P12))), sub(protectedDiv(sub(mul(sub(P4, P13), protectedDiv(P16, P22)), sub(P6, P1)), P2), mul(mul(P5, P11), add(P8, P8))), sub(protectedDiv(mul(P3, P22),
mul(P22, P9)), mul(protectedDiv(P6, P10), mul(add(P2, P12), P0))), protectedDiv(mul(add(P18, P17), protectedDiv(P13, P12)), sub(mul(P14, P0), mul(P18, P0))), sub(sub(mul(P5, P14), P17), mul(add(P2, P20), mul(P14, P12))), mul(sub(protectedDiv(P16, P11), sub(P17, P6)), sub(P19, sub(P6, P1))))

Iteration #:  11
                                        fitness                                              height
                --------------------------------------------------------        -------------------------------
gen     nevals  avg             max             min             std             avg     max     min std
0       25      0.516091        0.683538        0.424219        0.060915        4.16    7       2   1.48809
1       21      0.476227        0.58359         0.424306        0.0388578       4.04    7       3    1.03846
2       21      0.458423        0.591651        0.385918        0.053828        3.48    5       3    0.699714
3       25      0.436213        0.55224         0.366843        0.0454237       4       6       3    0.848528
4       23      0.427548        0.528411        0.366843        0.0482973       4.08    6       3    0.844748
5       24      0.429225        0.553715        0.36615         0.0550964       4.08    5       3    0.744043
6       20      0.393227        0.493196        0.340213        0.035478        3.92    5       3    0.688186
7       23      0.397745        0.501276        0.340213        0.045524        4.08    7       3    0.934666
8       14      0.386867        0.501918        0.340213        0.05431         3.92    7       3    1.26238
9       23      0.399565        0.700425        0.335909        0.078383        3.36    5       1    0.889044
10      18      0.364207        0.496485        0.331156        0.0386312       4.52    7       3    0.943186
11      22      0.377965        0.525148        0.330983        0.0508306       5.08    7       3    0.688186
12      18      0.360147        0.442424        0.330983        0.037736        5.12    7       5    0.430813
13      18      0.360044        0.496788        0.330034        0.0475113       5.08    7       5    0.391918
14      16      0.35583         0.563671        0.329413        0.0531703       5.32    7       5    0.676461
15      24      0.359663        0.464659        0.329404        0.038943        5.32    7       5    0.676461
16      19      0.356857        0.465716        0.329404        0.0425084       5.2     6       5    0.4
17      21      0.36413         0.513801        0.329404        0.0538793       5.6     7       5    0.748331
18      21      0.358003        0.486636        0.327388        0.0492426       5.88    7       5    0.863481
19      18      0.350826        0.533096        0.327173        0.0503637       5.6     7       5    0.894427
20      21      0.348383        0.460546        0.327018        0.0365006       5.48    7       5    0.754718
21      22      0.353139        0.537372        0.325203        0.0583408       5.64    7       5    0.793977
22      21      0.358564        0.49317         0.325203        0.0486629       5.36    7       5    0.685857
23      20      0.345615        0.45771         0.325203        0.0354757       5.76    7       5    0.81388
24      15      0.357789        0.587282        0.325203        0.0678641       6.48    7       5    0.805978
25      20      0.345333        0.456941        0.325203        0.034673        6.88    7       5    0.430813
26      23      0.345843        0.455759        0.324774        0.0373321       6.96    7       6    0.195959
27      21      0.356257        0.48481         0.324009        0.048688        6.76    7       6    0.427083
28      17      0.34162         0.481967        0.323983        0.0372296       6.68    7       6    0.466476
29      19      0.350856        0.495452        0.323983        0.0470063       6.96    7       6    0.195959
30      16      0.338867        0.536039        0.32376         0.0437399       7       7       7    0

Best individual:
codeFunction(protectedDiv(mul(sub(sub(P7, protectedDiv(P16, P16)), protectedDiv(P16, P16)), P4), mul(add(P4, P13), P3)), protectedDiv(sub(P7, P4), P20), mul(sub(P15, P6), sub(sub(sub(P14, P20), sub(P4, P9)), protectedDiv(mul(P8, mul(sub(P10, P17), mul(P22, P3))), mul(P1, P21)))), mul(P6, P2), sub(sub(P7, P4), protectedDiv(protectedDiv(add(P13, P23), add(P22, P13)), P16)), sub(sub(sub(sub(P14, P20), sub(P4, P9)), protectedDiv(mul(mul(sub(P10, P17), mul(P22, P3)), P7), mul(P1, P21))), P20), protectedDiv(add(P4, P13), mul(P13, P6)))

Iteration #:  12
                                 fitness                                     height
                -----------------------------------------       -------------------------------
gen     nevals  avg     		max     		min             std             avg     max     min    std
0       25      0.52939 		0.66294 		0.383816        0.0750254       3.72    6       2      1.14961
1       21      0.44576 		0.598776        0.383349        0.049044        3.76    7       2      1.14123
2       17      0.403487        0.578429        0.381078        0.0401508       4.32    5       3    0.676461
3       16      0.396095        0.519298        0.380862        0.0283674       5       7       3    0.894427
4       21      0.41109         0.521667        0.380785        0.0433858       5.52    7       5    0.64
5       19      0.391363        0.491852        0.358185        0.030935        5.28    6       5    0.448999
6       21      0.395936        0.517346        0.358185        0.0412012       5.44    7       3    0.852291
7       19      0.396787        0.542719        0.334577        0.0485162       5.32    7       3    1.08517
8       20      0.377169        0.517398        0.333073        0.0455645       5.68    7       3    0.926067
9       12      0.349828        0.412926        0.331294        0.0202873       6.08    7       5    0.391918
10      22      0.363363        0.464182        0.331294        0.0463287       6.16    7       6    0.366606
11      22      0.364828        0.5403          0.330017        0.0542921       6.28    7       6    0.448999
12      23      0.339689        0.470209        0.327337        0.0295609       6.44    7       6    0.496387
13      19      0.354948        0.700417        0.326889        0.0751829       6.28    7       1    1.18389
14      19      0.359884        0.526658        0.326889        0.0502264       6.88    7       6    0.324962
15      20      0.361427        0.511861        0.326528        0.0549946       7       7       7    0
16      22      0.355446        0.511039        0.326089        0.0437011       6.96    7       6    0.195959
17      21      0.358002        0.486082        0.326089        0.0468197       7       7       7    0
18      21      0.345889        0.494931        0.325822        0.0406856       6.96    7       6    0.195959
19      20      0.353334        0.554383        0.325822        0.0563903       6.92    7       6    0.271293
20      15      0.32988         0.354215        0.325822        0.00865723      7       7       7    0
21      24      0.339961        0.378077        0.325444        0.0163172       6.92    7       6    0.271293
22      24      0.352885        0.464685        0.32419         0.0406497       6.96    7       6    0.195959
23      21      0.351667        0.48771         0.32419         0.0417992       6.96    7       6    0.195959
24      24      0.374237        0.537883        0.299645        0.065377        6.92    7       6    0.271293
25      24      0.340412        0.483842        0.299464        0.0417577       7       7       7    0
26      22      0.333195        0.442945        0.299378        0.0487553       7       7       7    0
27      23      0.308936        0.376381        0.27431         0.0238411       7       7       7    0
28      13      0.313024        0.459897        0.274224        0.0440513       6.96    7       6    0.195959
29      18      0.289021        0.389425        0.273906        0.0331885       7       7       7    0
30      19      0.315885        0.431492        0.273863        0.0536947       7       7       7    0

Best individual:
codeFunction(sub(protectedDiv(P23, P23), protectedDiv(P11, P3)), add(add(P14, mul(protectedDiv(protectedDiv(P14, P0), mul(P17, P0)), protectedDiv(protectedDiv(P17, mul(P16, P19)), add(P20, P6)))), mul(P20, P13)), protectedDiv(mul(P16, P19), sub(add(sub(P18, P8), protectedDiv(P20, P14)), protectedDiv(add(P14, P21), mul(P16, P19)))), protectedDiv(protectedDiv(sub(add(sub(P18, P8), protectedDiv(P20, P14)), protectedDiv(protectedDiv(P9, P17), mul(P16, P19))), protectedDiv(sub(add(sub(P18, P8), protectedDiv(P20, P14)), protectedDiv(add(P14, P13), mul(P16, P19))), P13)), sub(P20, P13)), mul(sub(P10, P11), P8), add(protectedDiv(P16, P15), sub(P13, P4)), mul(add(protectedDiv(mul(sub(P18, P16), protectedDiv(P7, P10)), add(P4, P2)), P2), add(P10, P14)))

Iteration #:  13
                                     fitness                                         height
                -------------------------------------------------       -------------------------------
gen     nevals  avg             max             min     		std             avg     max     min     std
0       25      0.523533        0.633712        0.41641 		0.0643227       3.64    7       2       1.32303
1       19      0.448518        0.523958        0.362112        0.0401716       4.28    7       2    1.63756
2       23      0.424373        0.547031        0.339633        0.0517603       3.48    6       2    0.984683
3       19      0.410041        0.700408        0.336117        0.0751925       3.08    5       1    1.05527
4       22      0.391937        0.525139        0.336117        0.0486897       4.08    6       2    1.01666
5       19      0.393736        0.497934        0.335329        0.0512162       4.16    6       2    0.966644
6       22      0.410099        0.57296         0.318127        0.0635942       4.12    6       2    0.863481
7       17      0.391975        0.498038        0.315092        0.0526451       4       7       2    1.0198
8       20      0.363791        0.531708        0.315092        0.0564696       4.12    7       2    0.992774
9       23      0.361676        0.519298        0.312865        0.050692        4.12    6       3    0.65238
10      21      0.354921        0.461212        0.288394        0.0492316       4.2     5       4    0.4
11      21      0.361376        0.555858        0.288065        0.0669488       4.4     6       2    0.979796
12      19      0.329968        0.441921        0.288091        0.0422724       4.4     6       4    0.69282
13      20      0.342427        0.431423        0.288091        0.0414326       4.64    7       3    1.12712
14      17      0.347848        0.525816        0.288091        0.0711776       4.44    7       2    0.983056
15      24      0.35344         0.494307        0.285624        0.0591496       4.28    6       4    0.601332
16      23      0.348563        0.494324        0.275306        0.055183        4.16    5       4    0.366606
17      21      0.343645        0.533564        0.275306        0.0641505       4.32    7       2    1.00876
18      24      0.360304        0.494307        0.273666        0.0713924       4.04    5       2    0.527636
19      23      0.358399        0.501684        0.273666        0.053165        4.28    7       2    0.872697
20      20      0.321031        0.460554        0.273666        0.0523165       4.32    7       4    0.733212
21      19      0.306301        0.479456        0.273666        0.0515834       4.2     6       4    0.489898
22      19      0.330357        0.567762        0.273666        0.0825508       4.2     7       4    0.632456
23      21      0.342324        0.520964        0.271128        0.0641935       4.48    7       4    0.854166
24      19      0.327484        0.504542        0.271128        0.0573793       5.48    7       4    1.4176
25      17      0.309831        0.512135        0.270931        0.0607943       6.04    7       3    1.42773
26      19      0.285869        0.374284        0.270931        0.0284821       6.8     7       4    0.69282
27      20      0.305414        0.49665         0.270931        0.0541962       6.88    7       4    0.587878
28      21      0.310981        0.437389        0.270931        0.0506409       6.64    7       4    0.974885
29      22      0.315662        0.700382        0.270931        0.0852759       6.56    7       1    1.29861
30      22      0.317595        0.470678        0.270468        0.055987        6.8     7       4    0.69282

Best individual:
codeFunction(protectedDiv(mul(P17, P18), sub(P16, P9)), protectedDiv(P14, sub(P16, P9)), add(mul(sub(P14, P14), P11), mul(P22, mul(P17, add(mul(sub(P14, P14), P11), mul(P22, mul(P14, P18)))))), add(protectedDiv(P14, P19), protectedDiv(P13, P3)), mul(protectedDiv(P19, P21), protectedDiv(P10, P11)), add(mul(mul(P16, P13), mul(P22, add(mul(sub(P14, P14), P11), mul(P22, mul(P14, P18))))), sub(add(P17, P4), add(P14, P16))), protectedDiv(P4, P1))

Iteration #:  14
                                         fitness                                             height
                ---------------------------------------------------------       -------------------------------
gen     nevals  avg             max             min             std             avg     max     min std
0       25      0.518338        0.656275        0.368396        0.0675899       3.6     7       2   1.38564
1       19      0.426197        0.581483        0.343031        0.0525648       4.12    6       2    1.17712
2       18      0.420656        0.636078        0.316548        0.0800642       5.4     7       3    0.938083
3       17      0.345717        0.471033        0.289217        0.0359167       5.64    6       4    0.685857
4       23      0.354974        0.444124        0.291678        0.0413133       5.6     7       4    0.894427
5       20      0.34038         0.472023        0.286974        0.0496432       5.28    7       4    1.0008
6       23      0.350728        0.504869        0.289321        0.0677463       5.76    7       2    1.17576
7       24      0.349481        0.550347        0.288506        0.0659843       5.76    7       4    0.991161
8       21      0.325523        0.470409        0.288506        0.0517645       5.64    7       4    0.932952
9       21      0.33249         0.471658        0.286844        0.063687        5.72    7       5    0.722219
10      19      0.310725        0.473481        0.286965        0.0390151       5.96    7       5    0.527636
11      22      0.338341        0.470591        0.286965        0.0512512       6.08    7       5    0.483322
12      22      0.316422        0.492494        0.286463        0.0511961       6.24    7       5    0.51225
13      18      0.317821        0.52835         0.286411        0.0566928       6.4     7       6    0.489898
14      24      0.317317        0.390777        0.285433        0.0349249       6.44    7       6    0.496387
15      19      0.314205        0.561346        0.285433        0.0616059       6.72    7       6    0.448999
16      22      0.304109        0.41804         0.285347        0.0318079       6.92    7       5    0.391918
17      16      0.303577        0.469228        0.284888        0.0397407       6.96    7       6    0.195959
18      25      0.317102        0.442719        0.284888        0.0494254       7       7       7    0
19      20      0.306782        0.472665        0.284534        0.0480165       7       7       7    0
20      21      0.302258        0.495981        0.284534        0.0473292       7       7       7    0
21      17      0.306011        0.495929        0.282511        0.0504797       7       7       7    0
22      20      0.302788        0.495374        0.280224        0.0458261       7       7       7    0
23      20      0.295174        0.367494        0.280224        0.0220518       7       7       7    0
24      20      0.305026        0.39134         0.280198        0.0351358       7       7       7    0
25      20      0.292595        0.33629         0.279439        0.0200904       6.96    7       6    0.195959
26      20      0.293277        0.385978        0.279379        0.0261352       7       7       7    0
27      17      0.289652        0.385182        0.279379        0.0234923       6.96    7       6    0.195959
28      20      0.291513        0.385433        0.278525        0.0238051       6.96    7       6    0.195959
29      21      0.307438        0.438056        0.277776        0.0428572       7       7       7    0
30      22      0.306468        0.432883        0.277518        0.0400004       6.92    7       6    0.271293

Best individual:
codeFunction(sub(protectedDiv(protectedDiv(P9, P23), mul(P13, P2)), protectedDiv(sub(P12, P5), mul(protectedDiv(P1, P15), mul(P20, protectedDiv(P1, P15))))), sub(protectedDiv(P0, P6), protectedDiv(mul(P17, P23), add(P10, P22))), add(mul(protectedDiv(P23, P6), sub(P13, P10)), mul(sub(mul(protectedDiv(P23, P6), sub(P13, add(P17, P19))), P24), protectedDiv(P15, P6))), mul(protectedDiv(sub(P17, P11), sub(P2, P15)), add(P12, sub(P3, protectedDiv(protectedDiv(P18, P23), mul(P13, P2))))), protectedDiv(P12, P11), add(add(add(P20, P3), mul(P14, P22)), add(protectedDiv(P6, P12), add(sub(P4, P19), protectedDiv(add(P17, P19), add(add(P24, P20), protectedDiv(P12, P11)))))), mul(mul(protectedDiv(P1, P15), mul(P20, protectedDiv(P1, P15))), sub(protectedDiv(P8, P0), protectedDiv(P9, P23))))

[ 0.76  0.69  0.66  0.72  0.54  0.67  0.66  0.57  0.53  0.87  0.59  0.57
  0.7   0.75  0.8 ]



0.672
0.096

++++++++++++++++++++++++++++++++++++++++++++


[(5, [3, 0]), (12, [13, 43]), (13, [33, 7]), (43, [35, 38]), (44, [14, 43]), (67, [25, 7]), (73, [5, 28]), (76, [21, 3]), (87, [19, 3]), (102, [18, 29])]

Iteration #:  0
   	      	                         fitness                         	             height            
   	      	---------------------------------------------------------	-------------------------------
gen	nevals	avg     	max     	min     	std      	avg 	max	min	std    
0  	25    	0.528214	0.709691	0.401244	0.0844294	3.64	7  	2  	1.35292
1  	22    	0.442985	0.519489	0.357148	0.0383782	3.4 	5  	2  	0.848528
2  	22    	0.401127	0.460987	0.331933	0.0350065	3.6 	6  	2  	1.0583  
3  	22    	0.388392	0.493179	0.332226	0.0381317	3.92	6  	2  	0.976524
4  	19    	0.373164	0.486567	0.332166	0.0386767	4.56	7  	3  	0.80399 
5  	21    	0.363435	0.448438	0.331881	0.038365 	4.88	7  	4  	0.95163 
6  	18    	0.350724	0.414399	0.331881	0.0244221	4.64	6  	4  	0.842852
7  	19    	0.356964	0.416956	0.330491	0.0300122	5.32	7  	4  	1.00876 
8  	16    	0.357847	0.47329 	0.328163	0.039507 	5.64	7  	4  	0.932952
9  	23    	0.354912	0.414607	0.327612	0.0272511	6.08	7  	4  	0.79599 
10 	22    	0.358212	0.44134 	0.327612	0.0346899	6   	7  	4  	0.748331
11 	22    	0.360225	0.700399	0.302828	0.0753782	5.8 	7  	1  	1.16619 
12 	19    	0.375281	0.700451	0.302828	0.0789288	5.6 	6  	1  	1.0198  
13 	24    	0.354025	0.454499	0.295879	0.0376386	5.76	7  	4  	0.763151
14 	24    	0.348494	0.406121	0.276115	0.0312696	5.08	7  	4  	0.688186
15 	20    	0.341848	0.403965	0.276115	0.0370546	4.88	7  	4  	0.815843
16 	24    	0.316795	0.372713	0.276115	0.0233218	4.52	7  	3  	0.854166
17 	17    	0.32429 	0.490447	0.276115	0.0513264	4.64	6  	4  	0.741889
18 	16    	0.32439 	0.531674	0.276115	0.0557098	4.2 	5  	4  	0.4     
19 	19    	0.311582	0.383799	0.276115	0.0313103	4.08	5  	3  	0.391918
20 	22    	0.320377	0.464815	0.273546	0.0445055	4.4 	6  	3  	0.8     
21 	14    	0.305019	0.378973	0.273546	0.0355083	4.72	6  	4  	0.917388
22 	21    	0.302737	0.459447	0.271847	0.0420703	4.16	6  	3  	0.674092
23 	17    	0.302811	0.47441 	0.271847	0.0440956	4.24	6  	2  	0.861626
24 	19    	0.316427	0.474193	0.271847	0.0511215	4   	5  	3  	0.282843
25 	20    	0.303064	0.381225	0.271153	0.028091 	4.24	6  	3  	0.649923
26 	22    	0.296087	0.350195	0.271051	0.0237198	4   	4  	4  	0       
27 	18    	0.282427	0.326433	0.268314	0.0178949	4   	5  	3  	0.282843
28 	20    	0.305472	0.517728	0.268314	0.0608407	4.16	5  	4  	0.366606
29 	21    	0.29784 	0.377018	0.26804 	0.0343537	4.24	6  	4  	0.51225 
30 	16    	0.290368	0.373048	0.26804 	0.0289214	4.24	7  	4  	0.708802

Best individual:
codeFunction(protectedDiv(P23, P12), protectedDiv(P21, P6), protectedDiv(P19, protectedDiv(P4, protectedDiv(P17, P5))), protectedDiv(P21, protectedDiv(mul(P17, P10), sub(P13, P8))), mul(P6, protectedDiv(P13, P22)), sub(P4, P3), protectedDiv(P10, P0))
Accuracy =  0.85

Iteration #:  1
   	      	                         fitness                         	             height            
   	      	---------------------------------------------------------	-------------------------------
gen	nevals	avg     	max     	min     	std      	avg	max	min	std    
0  	25    	0.565008	0.682671	0.417077	0.0648763	4.2	7  	2  	1.69706
1  	21    	0.482449	0.633668	0.411749	0.0596286	3.64	6  	2  	1.05376
2  	19    	0.437784	0.501779	0.385277	0.0327724	3.84	6  	3  	0.966644
3  	15    	0.407039	0.468222	0.33379 	0.031284 	4   	6  	3  	1.09545 
4  	23    	0.387961	0.487502	0.332105	0.0343645	4.24	6  	3  	1.14123 
5  	20    	0.371737	0.504687	0.304094	0.0466692	4.72	7  	3  	0.96    
6  	24    	0.371931	0.493161	0.303327	0.0549563	5.16	7  	3  	1.31697 
7  	17    	0.352357	0.516037	0.302182	0.0542579	5.04	7  	3  	1.21589 
8  	22    	0.343607	0.520799	0.276794	0.0535491	4.28	7  	4  	0.722219
9  	22    	0.333847	0.507572	0.276459	0.0443655	4.16	6  	4  	0.463033
10 	18    	0.3341  	0.414251	0.276459	0.0379515	4.16	6  	3  	0.542586
11 	25    	0.328613	0.389208	0.300779	0.0265139	4.4 	6  	3  	0.8     
12 	18    	0.327859	0.431838	0.298966	0.0420369	4.72	6  	4  	0.825591
13 	23    	0.326448	0.464234	0.27602 	0.0382315	4.56	7  	4  	0.752596
14 	20    	0.325876	0.457304	0.27602 	0.037608 	4.8 	7  	4  	0.894427
15 	22    	0.329257	0.700443	0.275977	0.0838611	4.48	7  	1  	1.09982 
16 	22    	0.313793	0.51103 	0.275083	0.0593314	5   	6  	4  	0.848528
17 	20    	0.309034	0.380741	0.275848	0.0278375	5.32	7  	4  	0.968297
18 	18    	0.305556	0.436342	0.275814	0.0447426	4.44	6  	4  	0.697424
19 	19    	0.317446	0.58509 	0.275453	0.0604322	4.2 	6  	3  	0.565685
20 	22    	0.307496	0.457174	0.274851	0.0404934	4.92	7  	4  	0.976524
21 	22    	0.305432	0.376442	0.274851	0.026637 	5.32	7  	4  	0.785875
22 	18    	0.296254	0.356216	0.27486 	0.0256473	5.2 	7  	4  	0.69282 
23 	14    	0.29635 	0.410719	0.27346 	0.0396223	5.32	6  	5  	0.466476
24 	20    	0.310481	0.43195 	0.27346 	0.0444971	5.48	7  	5  	0.64    
25 	21    	0.332038	0.435831	0.27346 	0.0519263	5.32	6  	5  	0.466476
26 	22    	0.316308	0.433928	0.273451	0.0481154	5.4 	7  	5  	0.632456
27 	23    	0.310408	0.435355	0.272525	0.0411322	5.36	7  	5  	0.557136
28 	19    	0.283678	0.351898	0.272216	0.0232929	5.2 	7  	5  	0.489898
29 	22    	0.305363	0.457071	0.27201 	0.0396348	5.12	6  	5  	0.324962
30 	18    	0.310062	0.551901	0.251029	0.0664271	5   	6  	3  	0.489898

Best individual:
codeFunction(add(sub(sub(add(P6, P17), mul(P21, P5)), P9), sub(P7, P0)), mul(protectedDiv(P12, P21), add(sub(P15, P8), sub(P15, P8))), mul(sub(P19, P8), add(P4, protectedDiv(P14, sub(P15, P8)))), mul(mul(P2, P23), mul(add(P6, P6), P7)), protectedDiv(sub(P15, P8), add(P19, P14)), sub(protectedDiv(P14, add(sub(P5, P9), sub(P7, P0))), sub(P15, P8)), protectedDiv(add(sub(P15, P8), P22), P15))
Accuracy =  0.71

Iteration #:  2
   	      	                     fitness                     	             height            
   	      	-------------------------------------------------	-------------------------------
gen	nevals	avg     	max  	min     	std      	avg 	max	min	std    
0  	25    	0.546782	0.761	0.417095	0.0855009	4.36	7  	2  	1.62185
1  	24    	0.499477	0.659449	0.391158	0.0589889	3.4 	7  	2  	1.09545
2  	24    	0.451711	0.550885	0.386359	0.0385002	3.92	7  	2  	1.32424
3  	20    	0.419644	0.546875	0.368751	0.0386105	3.32	5  	2  	0.676461
4  	21    	0.40414 	0.502396	0.344489	0.0341912	3.4 	5  	3  	0.632456
5  	18    	0.391836	0.480615	0.344489	0.0404146	3.88	6  	3  	0.587878
6  	19    	0.391924	0.57447 	0.34356 	0.0603964	4.04	5  	4  	0.195959
7  	21    	0.381141	0.499427	0.343326	0.0437826	4.08	5  	4  	0.271293
8  	18    	0.400137	0.593007	0.339667	0.0656467	4.2 	7  	3  	0.748331
9  	19    	0.370033	0.480615	0.310615	0.0473652	4.68	6  	3  	1.04766 
10 	23    	0.372815	0.480086	0.309542	0.0516105	5.44	7  	4  	1.02294 
11 	20    	0.34271 	0.415153	0.309542	0.0277611	6.12	7  	4  	0.765245
12 	22    	0.356863	0.49921 	0.308807	0.0578623	5.8 	7  	4  	1.23288 
13 	17    	0.331024	0.414494	0.306881	0.0309774	6.28	7  	4  	0.96    
14 	19    	0.367463	0.700443	0.306302	0.0880618	5.64	7  	1  	1.46642 
15 	20    	0.337923	0.446511	0.305293	0.0424059	5.48	7  	2  	1.29985 
16 	21    	0.32848 	0.405465	0.305293	0.0287322	5.84	7  	4  	0.88    
17 	23    	0.354756	0.535506	0.30512 	0.0583587	5.8 	7  	4  	0.748331
18 	22    	0.329214	0.439659	0.303327	0.0339566	5.48	7  	4  	0.984683
19 	21    	0.350368	0.516652	0.304551	0.0609493	5.12	7  	4  	0.992774
20 	22    	0.326134	0.464416	0.304258	0.0347281	5.16	7  	4  	1.04614 
21 	20    	0.328662	0.440075	0.304258	0.0365353	4.72	6  	4  	0.872697
22 	19    	0.328464	0.433289	0.298091	0.0386801	4.56	7  	4  	0.941488
23 	21    	0.336948	0.456656	0.297876	0.0409559	4.84	7  	4  	1.22246 
24 	21    	0.334143	0.423091	0.297799	0.0407429	4.88	7  	4  	1.21062 
25 	21    	0.3267  	0.456475	0.29737 	0.043764 	4.84	7  	4  	1.12    
26 	20    	0.337074	0.444289	0.297362	0.0481898	4.72	7  	4  	0.775629
27 	22    	0.359606	0.486956	0.29773 	0.0618039	4.84	7  	4  	0.674092
28 	22    	0.351327	0.454637	0.296796	0.0524786	4.92	6  	4  	0.744043
29 	15    	0.337384	0.700486	0.296796	0.0838204	5.28	7  	1  	1.28125 
30 	18    	0.3303  	0.551085	0.296796	0.0553383	5.8 	7  	4  	0.748331

Best individual:
codeFunction(sub(P9, P17), sub(P16, P6), protectedDiv(add(sub(P9, P17), add(P11, P23)), add(mul(P19, P15), add(P11, P23))), protectedDiv(sub(P16, add(sub(mul(P1, P2), protectedDiv(P3, P3)), sub(add(P12, P20), add(P11, P13)))), protectedDiv(sub(P16, P6), P21)), mul(mul(mul(P6, P15), P20), P12), mul(sub(sub(P16, P6), mul(P20, P12)), P20), sub(sub(protectedDiv(P17, P20), protectedDiv(P15, P12)), protectedDiv(mul(P21, P22), protectedDiv(P17, P3))))
Accuracy =  0.69

Iteration #:  3
   	      	                         fitness                         	             height            
   	      	---------------------------------------------------------	-------------------------------
gen	nevals	avg     	max     	min     	std      	avg 	max	min	std    
0  	25    	0.529877	0.669914	0.365161	0.0837233	3.96	7  	2  	1.45547
1  	22    	0.437675	0.625398	0.338307	0.054819 	4.2 	7  	2  	1.16619
2  	19    	0.3971  	0.444185	0.338307	0.0335431	4.64	7  	3  	1.32303
3  	21    	0.380298	0.469437	0.337337	0.0386045	5.56	7  	3  	0.941488
4  	21    	0.366507	0.491956	0.311956	0.0465033	5.88	7  	3  	0.765245
5  	20    	0.350937	0.441462	0.311956	0.0357464	5.52	7  	3  	0.943186
6  	22    	0.348403	0.441462	0.311844	0.0420836	5.72	6  	3  	0.825591
7  	18    	0.357922	0.495027	0.288628	0.0610126	6   	7  	4  	0.489898
8  	21    	0.342518	0.444801	0.287277	0.0480971	6.04	7  	6  	0.195959
9  	20    	0.348939	0.471485	0.287277	0.050763 	6.04	7  	6  	0.195959
10 	19    	0.347713	0.474818	0.284093	0.0496711	6.04	7  	6  	0.195959
11 	18    	0.34171 	0.532047	0.284093	0.0596585	6.16	7  	6  	0.366606
12 	21    	0.345551	0.469532	0.281803	0.0547691	6.12	7  	6  	0.324962
13 	20    	0.30958 	0.4752  	0.280103	0.0513626	6.32	7  	6  	0.466476
14 	20    	0.327283	0.419289	0.280103	0.0394527	6.88	7  	6  	0.324962
15 	19    	0.321994	0.555624	0.280103	0.0721393	6.64	7  	2  	1.22898 
16 	19    	0.311316	0.362926	0.27993 	0.0318684	7   	7  	7  	0       
17 	24    	0.332827	0.700451	0.27993 	0.0892786	6.72	7  	1  	1.18389 
18 	24    	0.321523	0.471919	0.27906 	0.0444537	6.84	7  	3  	0.783837
19 	20    	0.332299	0.480355	0.27906 	0.0551456	7   	7  	7  	0       
20 	24    	0.311006	0.384888	0.279715	0.0288322	6.96	7  	6  	0.195959
21 	23    	0.316081	0.409067	0.279767	0.0347953	7   	7  	7  	0       
22 	19    	0.32622 	0.44147 	0.277776	0.053698 	7   	7  	7  	0       
23 	22    	0.307227	0.410079	0.279465	0.0360419	7   	7  	7  	0       
24 	21    	0.309443	0.408781	0.279465	0.037856 	6.96	7  	6  	0.195959
25 	20    	0.311719	0.433989	0.278594	0.0415381	6.96	7  	6  	0.195959
26 	15    	0.309212	0.466011	0.278594	0.0418672	6.88	7  	6  	0.324962
27 	22    	0.306362	0.410165	0.278465	0.0382348	6.92	7  	6  	0.271293
28 	23    	0.309099	0.382062	0.278387	0.0320073	6.96	7  	6  	0.195959
29 	22    	0.306723	0.46948 	0.278387	0.0439464	6.92	7  	6  	0.271293
30 	23    	0.307333	0.457451	0.278387	0.0471869	6.84	7  	6  	0.366606

Best individual:
codeFunction(sub(sub(P21, P23), protectedDiv(P24, sub(protectedDiv(P14, add(P18, P10)), P16))), mul(sub(P15, P16), mul(mul(sub(mul(P0, P18), protectedDiv(P23, P23)), sub(protectedDiv(P13, P24), add(P1, P17))), P0)), protectedDiv(add(P2, P2), add(P5, P16)), mul(protectedDiv(P3, P1), mul(P10, P7)), add(sub(P11, P16), protectedDiv(P11, P5)), add(sub(P1, P21), sub(P10, P16)), sub(protectedDiv(P13, P19), protectedDiv(P5, mul(sub(sub(mul(P0, P18), P1), sub(P0, P21)), sub(add(P14, P10), protectedDiv(P3, P1))))))
Accuracy =  0.59

Iteration #:  4
   	      	                     fitness                     	            height            
   	      	-------------------------------------------------	------------------------------
gen	nevals	avg     	max    	min     	std      	avg 	max	min	std   
0  	25    	0.516413	0.60381	0.342381	0.0649823	3.48	7  	2  	1.2687
1  	23    	0.465105	0.639134	0.342381	0.0663725	3.48	7  	2  	1.0245
2  	22    	0.416049	0.520426	0.342554	0.0471727	3.68	6  	3  	0.968297
3  	20    	0.40392 	0.49043 	0.342528	0.0393777	3.64	5  	3  	0.741889
4  	23    	0.398337	0.51303 	0.335572	0.0434262	3.44	5  	3  	0.637495
5  	21    	0.395453	0.470799	0.335572	0.042255 	4.04	6  	3  	0.773563
6  	23    	0.405883	0.700477	0.329749	0.0799563	3.8 	5  	1  	0.748331
7  	21    	0.384821	0.495218	0.311939	0.0510236	4.12	6  	3  	0.587878
8  	20    	0.352513	0.471797	0.311939	0.0330159	4.44	7  	4  	0.80399 
9  	20    	0.351572	0.470521	0.304301	0.0361352	4.4 	7  	3  	0.748331
10 	20    	0.366077	0.581301	0.279146	0.0663512	5   	7  	3  	1.0198  
11 	15    	0.330579	0.469636	0.279146	0.0472733	5.12	7  	4  	0.515364
12 	19    	0.339754	0.488203	0.279068	0.0563359	5.16	6  	4  	0.463033
13 	21    	0.344758	0.515777	0.278362	0.0621497	5.12	7  	5  	0.430813
14 	22    	0.350363	0.498186	0.278611	0.065957 	5.24	7  	5  	0.51225 
15 	20    	0.350073	0.546216	0.278353	0.0793642	5.28	6  	5  	0.448999
16 	19    	0.366666	0.601267	0.278413	0.102847 	5.64	7  	5  	0.741889
17 	18    	0.335871	0.519758	0.278413	0.0677341	5.4 	7  	5  	0.565685
18 	16    	0.324407	0.466982	0.276364	0.065628 	5.32	6  	5  	0.466476
19 	20    	0.342851	0.519567	0.276364	0.0778192	5.12	6  	5  	0.324962
20 	22    	0.331119	0.441583	0.273863	0.0539876	5.16	7  	5  	0.463033
21 	21    	0.32345 	0.436532	0.273863	0.0572369	5.24	7  	4  	0.649923
22 	20    	0.320317	0.601076	0.273777	0.0801295	5.2 	7  	4  	0.632456
23 	21    	0.323213	0.441193	0.273692	0.0571983	5.64	7  	5  	0.932952
24 	21    	0.321695	0.463273	0.273614	0.0558446	5.8 	7  	4  	1.0198  
25 	19    	0.310254	0.43552 	0.243262	0.059134 	5.96	7  	5  	0.958332
26 	20    	0.296692	0.46745 	0.243262	0.0480654	6   	7  	5  	0.848528
27 	19    	0.29332 	0.439563	0.219219	0.0560389	5.36	7  	5  	0.62482 
28 	19    	0.271642	0.580268	0.219219	0.071277 	5.16	7  	5  	0.463033
29 	16    	0.269234	0.518361	0.219219	0.0777909	5.2 	7  	5  	0.489898
30 	24    	0.287404	0.432848	0.219031	0.0610118	5.24	6  	5  	0.427083

Best individual:
codeFunction(mul(P4, add(P5, P3)), mul(mul(protectedDiv(P10, P5), add(mul(P18, P20), mul(P16, P4))), sub(P5, P22)), mul(mul(P1, P22), add(P11, P4)), add(mul(P5, P15), add(P17, P4)), add(protectedDiv(P10, P19), sub(P5, P10)), protectedDiv(sub(P4, P20), mul(P10, P15)), sub(protectedDiv(P4, P5), protectedDiv(P10, P5)))
Accuracy =  0.68


Accuracies = [ 0.85  0.71  0.69  0.59  0.68]
Mean =  0.704
Std Dev =  0.083809307359
